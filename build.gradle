apply from: "$rootDir/tools/jacoco-unified.gradle"

buildscript {
    ext.kotlin_version = '1.2.71'
    ext.android_plugin_version = '3.2.0'
    extensions.jacocoVersion = '0.8.2'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'

        // Necessary to publish
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {

    apply from: "$rootDir/tools/jacoco.gradle"
    apply from: "$rootDir/tools/ktlint.gradle"
    apply from: "$rootDir/tools/unit-test.gradle"
    apply from: "$rootDir/tools/instrumented-test.gradle"

    afterEvaluate {

        if (!project.hasProperty("android")) return

        android {

            compileSdkVersion 28
            buildToolsVersion "28.0.3"

            defaultConfig {
                minSdkVersion 21
                targetSdkVersion 28

                versionCode 1
                versionName "1.0"

                resConfigs "en"
            }

            lintOptions {
                checkReleaseBuilds true

                abortOnError true
                ignoreWarnings false
                absolutePaths false
                warningsAsErrors false

                htmlOutput file("$rootDir/build/reports/lint/html/$name-lint.html")
                xmlOutput file("$rootDir/build/reports/lint/xml/$name-lint.xml")
            }

            aaptOptions {
                cruncherEnabled = false
            }

            testOptions {
                unitTests.includeAndroidResources true
                unitTests.returnDefaultValues = true
                animationsDisabled true
            }

            packagingOptions {
                exclude 'META-INF/LICENSE'
                pickFirst 'protobuf.meta'
                doNotStrip '*/mips/*.so'
                doNotStrip '*/mips64/*.so'
            }

            sourceSets {
                main.java.srcDirs += 'src/main/kotlin'
                test.java.srcDirs += 'src/test/kotlin'
                androidTest.java.srcDirs += 'src/androidTest/kotlin'
                androidTest.resources.srcDirs += 'src/androidTest/res'
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }


            task sourcesJar(type: Jar) {
                from android.sourceSets.main.java.srcDirs
                classifier = 'sources'
            }

            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
                options.addStringOption('encoding', 'UTF-8')
            }

            task javadoc(type: Javadoc) {
                excludes = ['**/*.kt']
                source = android.sourceSets.main.java.srcDirs
                classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
            }

            task javadocJar(type: Jar, dependsOn: javadoc) {
                classifier = 'javadoc'
                from javadoc.destinationDir
            }

            task publishRelease(group: "publishing",
                    dependsOn: ["clean", "build", "install", "bintrayUpload"])

            artifacts {
                archives javadocJar
                archives sourcesJar
            }

            dependencies {
                ktlint "com.github.shyiko:ktlint:$versions.ktLint"
            }
        }
    }
}

ext.versions = [

        // Android
        androidSupport: '28.0.0',

        // Android Arch
        arch          : '1.1.1',

        // KtLint
        ktLint        : '0.27.0',

        // Test
        espresso      : '3.0.2',
        mockito       : '2.11.0',
        mockito_kotlin: '2.0.0-RC1',
        robolectric   : '4.0-alpha-3',
        hamcrest      : '1.3',
        junit         : '4.12',
        rules         : '1.0.2',
        runner        : '1.0.2',
        kappuccino    : '1.2.0',
        mirror        : '1.6',
        uiAutomator   : '2.1.3'
]

task clean(type: Delete) {
    delete rootProject.buildDir
}
