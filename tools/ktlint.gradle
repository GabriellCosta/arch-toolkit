configurations {
    ktlint
}

afterEvaluate {

    if (!project.hasProperty('android')) return

    def flavors = []
    def buildTypes = []

    def taskVariants = []

    android.productFlavors.all {
        flavor -> flavors.add(flavor.name)
    }

    android.buildTypes.all {
        buildType -> buildTypes.add(buildType.name)
    }

    if (flavors.isEmpty()) {
        taskVariants.addAll(buildTypes)
    } else {
        flavors.each { flavor ->
            buildTypes.each { buildType ->
                taskVariants.add("$flavor-$buildType")
            }

            // Runs ktLint with buildVariant for all buildTypes on flavor
            task("ktLint-$flavor", group: "lint") {
                buildTypes.each { buildType ->
                    dependsOn "ktLint-$flavor-$buildType"
                }
            }
            task("ktLintFormat-$flavor", group: "lint-format") {
                buildTypes.each { buildType ->
                    dependsOn "ktLintFormat-$flavor-$buildType"
                }
            }
        }

        // Runs ktLint with buildVariant for all flavors
        buildTypes.each { buildType ->
            task("ktLint-$buildType", group: "lint") {
                flavors.each { flavor ->
                    dependsOn "ktLint-$flavor-$buildType"
                }
            }
            task("ktLintFormat-$buildType", group: "lint-format") {
                flavors.each { flavor ->
                    dependsOn "ktLintFormat-$flavor-$buildType"
                }
            }
        }
    }

    // Runs ktLint for all task variants possible
    task("ktLint", group: "lint") {
        taskVariants.each { taskVariant ->
            dependsOn "ktLint-$taskVariant"
        }
    }
    task("ktLintFormat", group: "lint-format") {
        taskVariants.each { taskVariant ->
            dependsOn "ktLintFormat-$taskVariant"
        }
    }

    // Runs ktLint for specific Variant and Flavor
    taskVariants.each { taskVariant ->
        def splitList = taskVariant.split("-")
        def flavor = splitList.size() > 1 ? "" : splitList.first()
        def buildType = splitList.last()

        task("ktLint-$taskVariant", type: JavaExec, group: "lint") {

            description = "Check Kotlin code style."
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint

            args "src/main/**/*.kt",
                    "src/test/**/*.kt",
                    "src/androidTest/**/*.kt",

                    "src/$buildType/**/*.kt",

                    "src/$flavor/**/*.kt",
                    "src/test${flavor.capitalize()}/**/*.kt",
                    "src/androidTest${flavor.capitalize()}/**/*.kt",

                    "--reporter=plain",
                    "--reporter=checkstyle,output=$rootDir/build/reports/ktlint/$project.name-$taskVariant-lint.xml"
        }

        task("ktLintFormat-$taskVariant", type: JavaExec, group: "lint-format") {

            description = "Fix Kotlin code style deviations."
            main = "com.github.shyiko.ktlint.Main"
            classpath = configurations.ktlint

            args "-F",
                    "src/main/**/*.kt",
                    "src/test/**/*.kt",
                    "src/androidTest/**/*.kt",

                    "src/$buildType/**/*.kt",

                    "src/$flavor/**/*.kt",
                    "src/test${flavor.capitalize()}/**/*.kt",
                    "src/androidTest${flavor.capitalize()}/**/*.kt"
        }
    }
}